package main

import (
    "os"
    "{{ .Module }}"
    "{{ .Module }}/internal/pkg/containers"
    "github.com/urfave/cli/v2"
)

var (
    configPath = ""
)

func main() {
    app := &cli.App{
        Name:    {{ .Name }}.Name,
        Usage:   "service",
        Version: {{ .Name }}.Version,
        Flags: []cli.Flag{
            &cli.StringFlag{
                Name:        "config",
                Aliases:     []string{"c"},
                Usage:       "Load configuration from `FILE`",
                EnvVars:     []string{"{{ .Name | ToUpper }}_CONFIG_PATH"},
                TakesFile:   true,
                Value:       configPath,
                Destination: &configPath,
                HasBeenSet:  false,
            },
        },
{{- if or .GRPCEnabled .HTTPEnabled }}
        Action: runServer,
{{- end  }}
        Commands: []*cli.Command{
            {
                Name:      "migrate",
                Usage:     "Run migrations",
                Action:    runMigrations,
                ArgsUsage: "",
            },
{{- if or .GRPCEnabled .HTTPEnabled }}
            {
                Name:      "server",
                Usage:     "Run API server",
                Action:    runServer,
                ArgsUsage: "",
            },
{{- end  }}
        },
    }
    if err := app.Run(os.Args); err != nil {
        panic(err)
    }
}

{{- if or .HTTPEnabled .GRPCEnabled }}
// runServer - run api server
func runServer(context *cli.Context) error {
    app := containers.NewServerContainer(configPath)
    app.Run()
    return nil
}
{{- end }}


// runMigrations - migrate database
func runMigrations(context *cli.Context) error {
	app := containers.NewMigrateContainer(configPath)
    app.Run()
	return nil
}
