package usecases

import (
    "context"

    "{{ .Module }}/internal/domain/errs"
    "{{ .Module }}/internal/domain/models"
)

//nolint: lll
//go:generate mockgen -build_flags=-mod=mod -destination mock/{{ .MockFileName }} {{ .Module }}/internal/domain/usecases {{ .UseCaseTypeName }}

type {{ .UseCaseTypeName }} interface {
    Get(
        ctx context.Context,
        id string,
    ) (*models.{{ .ModelName }}, *errs.Error)
    List(
        ctx context.Context,
        filter *models.{{ .FilterTypeName }},
    ) ([]*models.{{ .ModelName }}, uint64, *errs.Error)
    Create(
        ctx context.Context,
        create *models.{{ .CreateTypeName }},
    ) (*models.{{ .ModelName }}, *errs.Error)
    Update(
        ctx context.Context,
        update *models.{{ .UpdateTypeName }},
    ) (*models.{{ .ModelName }}, *errs.Error)
    Delete(
        ctx context.Context,
        id string,
    ) *errs.Error
}
