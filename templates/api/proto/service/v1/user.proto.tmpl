syntax = "proto3";

package {{ .ProtoPackage }}.v1;

option go_package = "{{ .Module }}/pkg/{{ .ProtoPackage }}/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";

message User {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  string photo = 5;
  google.protobuf.Timestamp created_at = 6;
  bool is_banned = 7;
  google.protobuf.StringValue region_id = 8;
}

message Users {
  repeated User users = 1;
  uint64 count = 2;
}

message Signup {
  string email = 1;
  string password = 2;
}

message UserUpdate {
  string id = 1;
  google.protobuf.StringValue first_name = 2;
  google.protobuf.StringValue last_name = 3;
  google.protobuf.StringValue email = 4;
  google.protobuf.StringValue password = 5;
  bytes photo = 6;
  google.protobuf.BoolValue is_banned = 7;
  google.protobuf.StringValue region_id = 8;
}

message UserFilter {
  google.protobuf.UInt64Value page_number = 1;
  google.protobuf.UInt64Value page_size = 2;
  google.protobuf.StringValue search = 3;
  repeated string order_by = 4;
}

message UserGet {
  string id = 1;
}

message UserDelete {
  string id = 1;
}

service UserService {
  rpc Signup({{ .ProtoPackage }}.v1.Signup) returns ({{ .ProtoPackage }}.v1.User) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "*"
    };
  }
  rpc Update({{ .ProtoPackage }}.v1.UserUpdate) returns ({{ .ProtoPackage }}.v1.User) {
    option (google.api.http) = {
      patch: "/v1/users/{id}"
      body: "*"
    };
  }
  rpc Get({{ .ProtoPackage }}.v1.UserGet) returns ({{ .ProtoPackage }}.v1.User){
    option (google.api.http) = {get: "/v1/users/{id}"};
  }
  rpc List({{ .ProtoPackage }}.v1.UserFilter) returns ({{ .ProtoPackage }}.v1.Users) {
    option (google.api.http) = {get: "/v1/users"};
  }
  rpc Delete({{ .ProtoPackage }}.v1.UserDelete) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/v1/users/{id}"};
  }
}
