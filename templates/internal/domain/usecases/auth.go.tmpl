package usecases

import (
    "context"

    "{{ .Module }}/internal/domain/errs"
    "{{ .Module }}/internal/domain/models"
)

//nolint: lll
//go:generate mockgen -build_flags=-mod=mod -build_flags=-mod=mod -destination mock/auth_mock.go {{ .Module }}/internal/domain/usecases AuthUseCase

type AuthUseCase interface {
    CreateToken(
        ctx context.Context,
        login *models.Login,
    ) (*models.TokenPair, *errs.Error)
    CreateTokenByUser(
        ctx context.Context,
        user *models.User,
    ) (*models.TokenPair, *errs.Error)
    HasPermission(
        ctx context.Context,
        user *models.User,
        permission models.PermissionID,
    ) *errs.Error
    HasObjectPermission(
        ctx context.Context,
        user *models.User,
        permission models.PermissionID,
        object any,
    ) *errs.Error
    RefreshToken(
        ctx context.Context,
        refresh models.Token,
    ) (*models.TokenPair, *errs.Error)
    ValidateToken(
        ctx context.Context,
        access models.Token,
    ) *errs.Error
    Auth(
        ctx context.Context,
        access models.Token,
    ) (*models.User, *errs.Error)
}
