syntax = "proto3";

package {{ .ProtoPackage }};

option go_package = "{{ .Module }}/pkg/{{ .ProtoPackage }}";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

message {{ .CreateTypeName }} {
{{- range $i, $value := .Params }}
  {{ $value.ProtoType }} {{ $value.Tag }} = {{ add $i 1 }};
{{- end }}
}

message {{ .ModelName }}Get {
  string id = 1;
}

message {{ .UpdateTypeName }} {
  string id = 1;
{{- range $i, $value := .Params }}
  {{ $value.ProtoWrapType }} {{ $value.Tag }} = {{ add $i 2 }};
{{- end }}
}

message {{ .ModelName }} {
  string id = 1;
  google.protobuf.Timestamp updated_at = 2;
  google.protobuf.Timestamp created_at = 3;
{{- range $i, $value := .Params }}
  {{ $value.ProtoType }} {{ $value.Tag }} = {{ add $i 4 }};
{{- end }}
}

message List{{ .ModelName }} {
  repeated {{ .ModelName }} items = 1;
  uint64 count = 2;
}

message {{ .ModelName }}Delete {
  string id = 1;
}

message {{ .FilterTypeName }} {
  google.protobuf.UInt64Value page_number = 1;
  google.protobuf.UInt64Value page_size = 2;
  repeated string order_by = 3;
  repeated string ids = 4;
{{- if .SearchEnabled }}
  google.protobuf.StringValue search = 5;
{{- end }}
}

service {{ .ModelName }}Service {
  rpc Create({{ .ProtoPackage }}.{{ .CreateTypeName }}) returns ({{ .ProtoPackage }}.{{ .ModelName }});
  rpc Get({{ .ProtoPackage }}.{{ .ModelName}}Get) returns ({{ .ProtoPackage }}.{{ .ModelName }});
  rpc Update({{ .ProtoPackage }}.{{ .UpdateTypeName }}) returns ({{ .ProtoPackage }}.{{ .ModelName }});
  rpc Delete({{ .ProtoPackage }}.{{ .ModelName }}Delete) returns (google.protobuf.Empty);
  rpc List({{ .ProtoPackage }}.{{ .FilterTypeName }}) returns ({{ .ProtoPackage }}.List{{ .ModelName }});
}