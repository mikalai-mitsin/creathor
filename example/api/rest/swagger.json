{
    "swagger": "2.0",
    "info": {
        "description": "TBD",
        "title": "example",
        "contact": {},
        "version": "0.1.0"
    },
    "host": "127.0.0.1:8000",
    "basePath": "/api/v1",
    "paths": {
        "/auth": {
            "post": {
                "description": "Auth user return access and refresh token.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Create token pair",
                "parameters": [
                    {
                        "description": "Login JSON",
                        "name": "Login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TokenPair"
                        }
                    }
                }
            },
            "patch": {
                "description": "Return new token pair.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh token",
                "parameters": [
                    {
                        "description": "Refresh token JSON",
                        "name": "Refresh",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.Refresh"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TokenPair"
                        }
                    }
                }
            }
        },
        "/equipment": {
            "get": {
                "description": "Responds with the list of all Equipment as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Equipment"
                ],
                "summary": "List Equipment array",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Equipment"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Takes a Equipment JSON and store in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Equipment"
                ],
                "summary": "Store a new Equipment",
                "parameters": [
                    {
                        "description": "Equipment JSON",
                        "name": "Equipment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EquipmentCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Equipment"
                        }
                    }
                }
            }
        },
        "/equipment/{uuid}": {
            "get": {
                "description": "Returns the Equipment whose UUID value matches the UUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Equipment"
                ],
                "summary": "Get single Equipment by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search Equipment by UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Equipment"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the Equipment whose UUID value matches the UUID.",
                "tags": [
                    "Equipment"
                ],
                "summary": "Delete single Equipment by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "delete Equipment by UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Returns the updated Equipment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Equipment"
                ],
                "summary": "Update Equipment by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update Equipment by UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Equipment JSON",
                        "name": "Equipment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EquipmentUpdate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Equipment"
                        }
                    }
                }
            }
        },
        "/sessions": {
            "get": {
                "description": "Responds with the list of all Session as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "List Session array",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Session"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Takes a Session JSON and store in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Store a new Session",
                "parameters": [
                    {
                        "description": "Session JSON",
                        "name": "Session",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SessionCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Session"
                        }
                    }
                }
            }
        },
        "/sessions/{uuid}": {
            "get": {
                "description": "Returns the Session whose UUID value matches the UUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Get single Session by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search Session by UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Session"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the Session whose UUID value matches the UUID.",
                "tags": [
                    "Session"
                ],
                "summary": "Delete single Session by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "delete Session by UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Returns the updated Session.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Update Session by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update Session by UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Session JSON",
                        "name": "Session",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SessionUpdate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Session"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Responds with the list of all User as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "List User array",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Takes a User JSON and store in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Store a new User",
                "parameters": [
                    {
                        "description": "User JSON",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/users/{uuid}": {
            "get": {
                "description": "Returns the User whose UUID value matches the UUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get single User by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search User by UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the User whose UUID value matches the UUID.",
                "tags": [
                    "User"
                ],
                "summary": "Delete single User by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "delete User by UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Returns the updated User.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update User by UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User JSON",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Equipment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "release": {
                    "type": "string"
                },
                "tested": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "models.EquipmentCreate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "release": {
                    "type": "string"
                },
                "tested": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "models.EquipmentUpdate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "release": {
                    "type": "string"
                },
                "tested": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "models.GroupID": {
            "type": "string",
            "enum": [
                "admin",
                "user",
                "guest"
            ],
            "x-enum-varnames": [
                "GroupIDAdmin",
                "GroupIDUser",
                "GroupIDGuest"
            ]
        },
        "models.Login": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.Session": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "release": {
                    "type": "string"
                },
                "tested": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "models.SessionCreate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "release": {
                    "type": "string"
                },
                "tested": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "models.SessionUpdate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "release": {
                    "type": "string"
                },
                "tested": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "models.TokenPair": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "string"
                },
                "refresh": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "group_id": {
                    "$ref": "#/definitions/models.GroupID"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UserCreate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.UserUpdate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "rest.Refresh": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        }
    }
}