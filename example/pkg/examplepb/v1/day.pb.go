// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: examplepb/v1/day.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DayCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Repeat      int32  `protobuf:"varint,2,opt,name=repeat,proto3" json:"repeat,omitempty"`
	EquipmentId string `protobuf:"bytes,3,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
}

func (x *DayCreate) Reset() {
	*x = DayCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examplepb_v1_day_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayCreate) ProtoMessage() {}

func (x *DayCreate) ProtoReflect() protoreflect.Message {
	mi := &file_examplepb_v1_day_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayCreate.ProtoReflect.Descriptor instead.
func (*DayCreate) Descriptor() ([]byte, []int) {
	return file_examplepb_v1_day_proto_rawDescGZIP(), []int{0}
}

func (x *DayCreate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DayCreate) GetRepeat() int32 {
	if x != nil {
		return x.Repeat
	}
	return 0
}

func (x *DayCreate) GetEquipmentId() string {
	if x != nil {
		return x.EquipmentId
	}
	return ""
}

type DayGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DayGet) Reset() {
	*x = DayGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examplepb_v1_day_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayGet) ProtoMessage() {}

func (x *DayGet) ProtoReflect() protoreflect.Message {
	mi := &file_examplepb_v1_day_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayGet.ProtoReflect.Descriptor instead.
func (*DayGet) Descriptor() ([]byte, []int) {
	return file_examplepb_v1_day_proto_rawDescGZIP(), []int{1}
}

func (x *DayGet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DayUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Repeat      *wrapperspb.Int32Value  `protobuf:"bytes,3,opt,name=repeat,proto3" json:"repeat,omitempty"`
	EquipmentId *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
}

func (x *DayUpdate) Reset() {
	*x = DayUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examplepb_v1_day_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayUpdate) ProtoMessage() {}

func (x *DayUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_examplepb_v1_day_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayUpdate.ProtoReflect.Descriptor instead.
func (*DayUpdate) Descriptor() ([]byte, []int) {
	return file_examplepb_v1_day_proto_rawDescGZIP(), []int{2}
}

func (x *DayUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DayUpdate) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *DayUpdate) GetRepeat() *wrapperspb.Int32Value {
	if x != nil {
		return x.Repeat
	}
	return nil
}

func (x *DayUpdate) GetEquipmentId() *wrapperspb.StringValue {
	if x != nil {
		return x.EquipmentId
	}
	return nil
}

type Day struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Name        string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Repeat      int32                  `protobuf:"varint,5,opt,name=repeat,proto3" json:"repeat,omitempty"`
	EquipmentId string                 `protobuf:"bytes,6,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
}

func (x *Day) Reset() {
	*x = Day{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examplepb_v1_day_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Day) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Day) ProtoMessage() {}

func (x *Day) ProtoReflect() protoreflect.Message {
	mi := &file_examplepb_v1_day_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Day.ProtoReflect.Descriptor instead.
func (*Day) Descriptor() ([]byte, []int) {
	return file_examplepb_v1_day_proto_rawDescGZIP(), []int{3}
}

func (x *Day) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Day) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Day) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Day) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Day) GetRepeat() int32 {
	if x != nil {
		return x.Repeat
	}
	return 0
}

func (x *Day) GetEquipmentId() string {
	if x != nil {
		return x.EquipmentId
	}
	return ""
}

type ListDay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Day `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Count uint64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ListDay) Reset() {
	*x = ListDay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examplepb_v1_day_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDay) ProtoMessage() {}

func (x *ListDay) ProtoReflect() protoreflect.Message {
	mi := &file_examplepb_v1_day_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDay.ProtoReflect.Descriptor instead.
func (*ListDay) Descriptor() ([]byte, []int) {
	return file_examplepb_v1_day_proto_rawDescGZIP(), []int{4}
}

func (x *ListDay) GetItems() []*Day {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDay) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DayDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DayDelete) Reset() {
	*x = DayDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examplepb_v1_day_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayDelete) ProtoMessage() {}

func (x *DayDelete) ProtoReflect() protoreflect.Message {
	mi := &file_examplepb_v1_day_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayDelete.ProtoReflect.Descriptor instead.
func (*DayDelete) Descriptor() ([]byte, []int) {
	return file_examplepb_v1_day_proto_rawDescGZIP(), []int{5}
}

func (x *DayDelete) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DayFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber *wrapperspb.UInt64Value `protobuf:"bytes,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize   *wrapperspb.UInt64Value `protobuf:"bytes,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderBy    []string                `protobuf:"bytes,3,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Ids        []string                `protobuf:"bytes,4,rep,name=ids,proto3" json:"ids,omitempty"`
	Search     *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *DayFilter) Reset() {
	*x = DayFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examplepb_v1_day_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayFilter) ProtoMessage() {}

func (x *DayFilter) ProtoReflect() protoreflect.Message {
	mi := &file_examplepb_v1_day_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayFilter.ProtoReflect.Descriptor instead.
func (*DayFilter) Descriptor() ([]byte, []int) {
	return file_examplepb_v1_day_proto_rawDescGZIP(), []int{6}
}

func (x *DayFilter) GetPageNumber() *wrapperspb.UInt64Value {
	if x != nil {
		return x.PageNumber
	}
	return nil
}

func (x *DayFilter) GetPageSize() *wrapperspb.UInt64Value {
	if x != nil {
		return x.PageSize
	}
	return nil
}

func (x *DayFilter) GetOrderBy() []string {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *DayFilter) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DayFilter) GetSearch() *wrapperspb.StringValue {
	if x != nil {
		return x.Search
	}
	return nil
}

var File_examplepb_v1_day_proto protoreflect.FileDescriptor

var file_examplepb_v1_day_proto_rawDesc = []byte{
	0x0a, 0x16, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x5a, 0x0a, 0x09, 0x44, 0x61, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x06,
	0x44, 0x61, 0x79, 0x47, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x09, 0x44, 0x61, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x12, 0x3f, 0x0a, 0x0c, 0x65,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0b, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xda, 0x01, 0x0a,
	0x03, 0x44, 0x61, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x07, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x1b, 0x0a, 0x09, 0x44, 0x61, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xe8, 0x01, 0x0a, 0x09, 0x44, 0x61, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3d,
	0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x39, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x32, 0x9e, 0x03, 0x0a, 0x0a,
	0x44, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x11, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x79,
	0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x79, 0x73, 0x12, 0x49, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x14, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x79, 0x47, 0x65, 0x74, 0x1a, 0x11, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x79, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x52, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61,
	0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x11, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x3a, 0x01, 0x2a, 0x32, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x61, 0x79, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x54, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x61, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x79, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x4c,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a,
	0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x79, 0x73, 0x42, 0x2b, 0x5a, 0x29,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x30, 0x31, 0x38, 0x62, 0x66,
	0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_examplepb_v1_day_proto_rawDescOnce sync.Once
	file_examplepb_v1_day_proto_rawDescData = file_examplepb_v1_day_proto_rawDesc
)

func file_examplepb_v1_day_proto_rawDescGZIP() []byte {
	file_examplepb_v1_day_proto_rawDescOnce.Do(func() {
		file_examplepb_v1_day_proto_rawDescData = protoimpl.X.CompressGZIP(file_examplepb_v1_day_proto_rawDescData)
	})
	return file_examplepb_v1_day_proto_rawDescData
}

var file_examplepb_v1_day_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_examplepb_v1_day_proto_goTypes = []interface{}{
	(*DayCreate)(nil),              // 0: examplepb.v1.DayCreate
	(*DayGet)(nil),                 // 1: examplepb.v1.DayGet
	(*DayUpdate)(nil),              // 2: examplepb.v1.DayUpdate
	(*Day)(nil),                    // 3: examplepb.v1.Day
	(*ListDay)(nil),                // 4: examplepb.v1.ListDay
	(*DayDelete)(nil),              // 5: examplepb.v1.DayDelete
	(*DayFilter)(nil),              // 6: examplepb.v1.DayFilter
	(*wrapperspb.StringValue)(nil), // 7: google.protobuf.StringValue
	(*wrapperspb.Int32Value)(nil),  // 8: google.protobuf.Int32Value
	(*timestamppb.Timestamp)(nil),  // 9: google.protobuf.Timestamp
	(*wrapperspb.UInt64Value)(nil), // 10: google.protobuf.UInt64Value
	(*emptypb.Empty)(nil),          // 11: google.protobuf.Empty
}
var file_examplepb_v1_day_proto_depIdxs = []int32{
	7,  // 0: examplepb.v1.DayUpdate.name:type_name -> google.protobuf.StringValue
	8,  // 1: examplepb.v1.DayUpdate.repeat:type_name -> google.protobuf.Int32Value
	7,  // 2: examplepb.v1.DayUpdate.equipment_id:type_name -> google.protobuf.StringValue
	9,  // 3: examplepb.v1.Day.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 4: examplepb.v1.Day.created_at:type_name -> google.protobuf.Timestamp
	3,  // 5: examplepb.v1.ListDay.items:type_name -> examplepb.v1.Day
	10, // 6: examplepb.v1.DayFilter.page_number:type_name -> google.protobuf.UInt64Value
	10, // 7: examplepb.v1.DayFilter.page_size:type_name -> google.protobuf.UInt64Value
	7,  // 8: examplepb.v1.DayFilter.search:type_name -> google.protobuf.StringValue
	0,  // 9: examplepb.v1.DayService.Create:input_type -> examplepb.v1.DayCreate
	1,  // 10: examplepb.v1.DayService.Get:input_type -> examplepb.v1.DayGet
	2,  // 11: examplepb.v1.DayService.Update:input_type -> examplepb.v1.DayUpdate
	5,  // 12: examplepb.v1.DayService.Delete:input_type -> examplepb.v1.DayDelete
	6,  // 13: examplepb.v1.DayService.List:input_type -> examplepb.v1.DayFilter
	3,  // 14: examplepb.v1.DayService.Create:output_type -> examplepb.v1.Day
	3,  // 15: examplepb.v1.DayService.Get:output_type -> examplepb.v1.Day
	3,  // 16: examplepb.v1.DayService.Update:output_type -> examplepb.v1.Day
	11, // 17: examplepb.v1.DayService.Delete:output_type -> google.protobuf.Empty
	4,  // 18: examplepb.v1.DayService.List:output_type -> examplepb.v1.ListDay
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_examplepb_v1_day_proto_init() }
func file_examplepb_v1_day_proto_init() {
	if File_examplepb_v1_day_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_examplepb_v1_day_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DayCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examplepb_v1_day_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DayGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examplepb_v1_day_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DayUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examplepb_v1_day_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Day); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examplepb_v1_day_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examplepb_v1_day_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DayDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examplepb_v1_day_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DayFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_examplepb_v1_day_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_examplepb_v1_day_proto_goTypes,
		DependencyIndexes: file_examplepb_v1_day_proto_depIdxs,
		MessageInfos:      file_examplepb_v1_day_proto_msgTypes,
	}.Build()
	File_examplepb_v1_day_proto = out.File
	file_examplepb_v1_day_proto_rawDesc = nil
	file_examplepb_v1_day_proto_goTypes = nil
	file_examplepb_v1_day_proto_depIdxs = nil
}
